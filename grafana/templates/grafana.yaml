{{ if .Values.enabled }}
apiVersion: grafana.integreatly.org/v1beta1
kind: Grafana
metadata:
  name: {{ .Values.grafanaName }}
  labels:
    app: grafana
    name: {{ .Values.grafanaName }}
  annotations:
    {{- if .Values.grafanaAnnotations }}
    {{- toYaml .Values.grafanaAnnotations | nindent 4 }}
    {{- end }}
spec:
  config:
    log:
      mode: console
      level: debug
    users:
      viewers_can_edit: "true"
    auth:
      disable_login_form: "true"
    auth.basic:
      enabled: "true"
    auth.anonymous:
      enabled: "false"
    auth.okta:
      enabled: "true"
      name: Okta
      icon: okta
      allow_sign_up: "true"
      scopes: "openid profile email groups"
      auth_url: https://czi-prod.okta.com/oauth2/v1/authorize
      token_url: https://czi-prod.okta.com/oauth2/v1/token
      api_url: https://czi-prod.okta.com/oauth2/v1/userinfo
      client_id: $__file{/etc/secrets/client-id}
      client_secret: $__file{/etc/secrets/client-secret}
      role_attribute_path: {{ .Values.roleAttributePath | quote }}
    server:
      root_url: "https://{{ .Values.grafanaSubdomain }}.{{ .Values.baseDomain }}"
  deployment:
    spec:
      replicas: {{ .Values.replicas }}
      template:
        spec:
          volumes:
            - name: secrets
              secret:
                secretName: {{ .Values.grafanaName }}-sso-secret
                defaultMode: 0444
          containers:
            - name: grafana
              env: {{- toYaml .Values.env | nindent 16 }}
              volumeMounts:
                - name: secrets
                  mountPath: /etc/secrets
                  readOnly: true
  service:
    spec:
      ports:
        - name: http
          port: 80
          targetPort: 3000
  ingress:
    spec:
      ingressClassName: nginx
      rules:
        - host: "{{ .Values.grafanaSubdomain }}.{{ .Values.baseDomain }}"
          http:
            paths:
              - path: /
                pathType: Prefix
                backend:
                  service:
                    name: {{ .Values.grafanaName }}-service
                    port:
                      number: 80
      tls:
        - hosts:
            - "{{ .Values.grafanaSubdomain }}.{{ .Values.baseDomain }}"
    metadata:
      annotations:
        external-dns.alpha.kubernetes.io/exclude: "false"
        external-dns.alpha.kubernetes.io/target: access.{{ .Values.baseDomain }}
        infra: "true"
        nginx.ingress.kubernetes.io/affinity: cookie
        nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
        nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
        nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
        nginx.ingress.kubernetes.io/session-cookie-max-age: "600"
        nginx.ingress.kubernetes.io/session-cookie-name: grafana_sticky_session
{{ end }}