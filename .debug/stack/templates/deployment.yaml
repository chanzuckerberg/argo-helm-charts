


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-stack-service1
  labels:
    helm.sh/chart: stack-1.8.0
    app.kubernetes.io/name: stack
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/service: release-name-stack-service1
  annotations:
    nginx.ingress.kubernetes.io/auth-response-headers: Authorization
    nginx.ingress.kubernetes.io/auth-signin: https://auth.chart-example.local/oauth2/start?rd=https://$host$escaped_request_uri
    nginx.ingress.kubernetes.io/auth-url: http://stack-oidc-proxy:4180/oauth2/auth
spec:
  progressDeadlineSeconds: 600
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/service: release-name-stack-service1
  template:
    metadata:
      annotations:
        config.linkerd.io/skip-outbound-ports: 3306,5432,6379,9300,11211,4444,4567,4568,587,25,2525,465,2465
        linkerd.io/inject: enabled
      labels:
        helm.sh/chart: stack-1.8.0
        app.kubernetes.io/name: stack
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/version: "1.16.0"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/service: release-name-stack-service1
    spec:
      serviceAccountName: default
      securityContext:
        {}
      containers:
        - name: stack
          securityContext:
            {}
          image: "nginx:latest"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          
          env: []
      initContainers:
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      nodeSelector:
        kubernetes.io/arch: arm64
      topologySpreadConstraints:
        - maxSkew: 2
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app.kubernetes.io/service: release-name-stack-service1
---