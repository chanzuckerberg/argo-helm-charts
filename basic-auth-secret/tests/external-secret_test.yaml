# yaml-language-server: $schema=https://raw.githubusercontent.com/helm-unittest/helm-unittest/main/schema/helm-testsuite.json
suite: test external-secret.yaml
templates:
  - external-secret.yaml

tests:
  - it: should render an ExternalSecret resource
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: ExternalSecret

  - it: should contain metadata
    asserts:
      - isNotEmpty:
          path: metadata.name

  - it: should contain metadata with correct name
    asserts:
      - equal:
          path: metadata.name
          value: central-loki-basic-auth

  - it: should have correct refresh interval
    asserts:
      - equal:
          path: spec.refreshInterval
          value: 1m

  - it: should reference the correct SecretStore
    set:
      externalSecret:
        secretStoreRef: my-secret-store
    asserts:
      - equal:
          path: spec.secretStoreRef.name
          value: my-secret-store
      - equal:
          path: spec.secretStoreRef.kind
          value: ClusterSecretStore

  - it: should define target secret name and creation policy
    asserts:
      - equal:
          path: spec.target.name
          value: central-loki-basic-auth
      - equal:
          path: spec.target.creationPolicy
          value: Owner

  - it: should have template engine version v2
    asserts:
      - equal:
          path: spec.target.template.engineVersion
          value: v2

  - it: should define BASIC_AUTH_CREDENTIALS in template data
    asserts:
      - isNotEmpty:
          path: spec.target.template.data.BASIC_AUTH_CREDENTIALS

  - it: should reference correct remote keys for USERNAME and PASSWORD
    set:
      keyPrefix: test-prefix/test-service
    asserts:
      - equal:
          path: spec.data[0].secretKey
          value: USERNAME
      - equal:
          path: spec.data[0].remoteRef.key
          value: test-prefix/test-service/basic-auth-secret/user_name
      - equal:
          path: spec.data[1].secretKey
          value: PASSWORD
      - equal:
          path: spec.data[1].remoteRef.key
          value: test-prefix/test-service/basic-auth-secret/password

  - it: should use custom external secret name when provided
    set:
      externalSecret:
        name: custom-basic-auth-secret
    asserts:
      - equal:
          path: metadata.name
          value: custom-basic-auth-secret
      - equal:
          path: spec.target.name
          value: custom-basic-auth-secret

  - it: should use custom secret store reference when provided
    set:
      externalSecret:
        secretStoreRef: custom-secret-store
    asserts:
      - equal:
          path: spec.secretStoreRef.name
          value: custom-secret-store
      - equal:
          path: spec.secretStoreRef.kind
          value: ClusterSecretStore

  - it: should use custom key prefix when provided
    set:
      keyPrefix: custom-prefix/custom-service
    asserts:
      - equal:
          path: spec.data[0].remoteRef.key
          value: custom-prefix/custom-service/basic-auth-secret/user_name
      - equal:
          path: spec.data[1].remoteRef.key
          value: custom-prefix/custom-service/basic-auth-secret/password
