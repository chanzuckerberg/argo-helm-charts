{{ $global := . }}
{{ range $serviceName, $serviceValues := .Values.services }}
  {{- $globalValuesDict := $global.Values.global | toYaml -}}
  {{- $values := fromYaml $globalValuesDict -}}
  {{- $values = set $values "name" $serviceName -}}
  {{- $values := mergeOverwrite $values $serviceValues -}}
  {{- $service := dict "Chart" $global.Chart "Release" $global.Release "Capabilities" $global.Capabilities "Values" $values -}}
{{- with $service }}

---
{{ if .Values.ingress.enabled }}
{{- $fullName := include "service.fullname" . -}}
{{- $svcPort := .Values.service.port -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "service.labels" . | nindent 4 }}
  {{- $nginxAuthAnnotations := dict}}
    {{- if .Values.ingress.oidcProtected }}
    {{- $nginxAuthAnnotations = (fromYaml (include "oidcProxy.nginxAuthAnnotations" . )) -}}
    {{- end}}
    {{- $certManagerAnnotations := (fromYaml (include "certManagerAnnotations" . )) }}
  annotations:
    {{- with (mergeOverwrite 
                (dict)
                ($nginxAuthAnnotations)
                ($certManagerAnnotations)
                (.Values.annotations) 
                (.Values.ingress.annotations)
      ) }}
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  ingressClassName: {{ .Values.ingress.className }}
  rules:
    - host: {{ $service.Values.ingress.host }}
      http:
        paths:
          {{- range $service.Values.ingress.paths }} 
          - path: {{ .path }}
            {{- if .pathType }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
          {{- end }}
    {{ $hosts := list}}
    {{ range $i, $rule := .Values.ingress.rules }}
    {{- $ruleValues := mergeOverwrite (dict "host" $service.Values.ingress.host "paths" $service.Values.ingress.paths) $rule -}}
    {{ $hosts = append $hosts $ruleValues.host }}
    - host: {{ $ruleValues.host | quote }}
      http:
        paths:
          {{- range $ruleValues.paths }} 
          - path: {{ .path }}
            {{- if .pathType }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
          {{- end }}
    {{ end }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
   {{- end }}
    - hosts:
      {{- toYaml (append $hosts .Values.ingress.host) | nindent 6 }}
      {{- $secretName := printf "%s-%s" .Values.ingress.host "tls-secret" }}
      secretName: {{  regexReplaceAll "[^a-zA-Z0-9-]" $secretName "-" }}
{{- end }}
---
{{- end }}
{{- end }}
