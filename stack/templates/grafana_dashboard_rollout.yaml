{{- $global := . }}
{{- $rolloutGlobalValues := default dict (get (default dict $global.Values.global) "rollout") }}
{{- $grafanaDashboardConfig := default dict (get $rolloutGlobalValues "grafanaDashboard") }}
{{- if $grafanaDashboardConfig.enabled }}
{{ range $serviceName, $serviceValues := .Values.services }}
  {{- $globalValuesDict := $global.Values.global | toYaml -}}
  {{- $values := fromYaml $globalValuesDict -}}
  {{- $values = set $values "name" $serviceName -}}
  {{- $values := mergeOverwrite $values $serviceValues -}}
  {{- $service := dict "Chart" $global.Chart "Release" $global.Release "Capabilities" $global.Capabilities "Values" $values -}}
{{- with $service }}
apiVersion: grafana.integreatly.org/v1beta1
kind: GrafanaDashboard
metadata:
  name: {{ default (printf "%s-%s-rollout-dashboard" .Release.Name .Chart.Name) $grafanaDashboardConfig.name }}
  labels:
    {{- include "stack.labels" . | nindent 4 }}
spec:
  folder: {{ default "Rollouts" $grafanaDashboardConfig.folder }}
  allowCrossNamespaceImport: true
  instanceSelector:
    matchLabels:
      app: "grafana"
  json: >-
    {{- $dashboardVars := dict }}
    {{- $_ := set $dashboardVars "dashboardName" (default (printf "%s-%s Rollout Dashboard" .Release.Name .Chart.Name) $grafanaDashboardConfig.name) }}
    {{- $_ := set $dashboardVars "serviceName" (include "service.fullname" .) }}
    {{- $_ := set $dashboardVars "targetServiceNamespace" (default .Release.Namespace $grafanaDashboardConfig.targetServiceNamespace) }}
    {{- $_ := set $dashboardVars "dataSource" (default "grafana-prometheus-datasource" $grafanaDashboardConfig.dataSource) }}
    {{- include "stack.grafanaDashboardActualJson" $dashboardVars | nindent 4 }}
{{- end }}
{{- end }}
{{- end }}

