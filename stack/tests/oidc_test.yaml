# yaml-language-server: $schema=https://raw.githubusercontent.com/helm-unittest/helm-unittest/main/schema/helm-testsuite.json
suite: oidc proxy deployment
templates:
  - oidc_proxy.yaml
tests:
  - it: can be disabled with oidcProxy.enabled=false
    set:
      global:
        oidcProxy:
          enabled: false
    asserts:
      - hasDocuments:
          count: 0
  - it: make the appropriate resources when enabled
    set:
      global:
        oidcProxy:
          enabled: true
    asserts:
      - hasDocuments:
          count: 3
      - documentIndex: 0
        containsDocument:
          kind: Deployment
          apiVersion: apps/v1
          name: release-name-stack-oidc-proxy
      - documentIndex: 1
        containsDocument:
          kind: Service
          apiVersion: v1
          name: release-name-stack-oidc-proxy
      - documentIndex: 2
        containsDocument:
          kind: Ingress
          apiVersion: networking.k8s.io/v1
          name: release-name-stack-oidc-proxy
  - it: disabled by default
    asserts:
      - hasDocuments:
          count: 0
  - it: sets additionalSecrets in envFrom
    set:
      global:
        appSecrets:
          envSecret:
            secretName: blah3
          stackSecret:
            secretName: blah4
          clusterSecret:
            secretName: blah5
        oidcProxy:
          enabled: true
          additionalSecrets:
            - secretRef:
              name: blah1
              optional: true
            - secretRef:
              name: blah2
              optional: true
    asserts:
      - documentIndex: 0
        lengthEqual:
          path: spec.template.spec.containers[0].envFrom
          count: 5
  - it: combines additionalSecrets with argus secrets in envFrom
    set:
      global:
        appSecrets:
          envSecret:
            secretName: blah3
          stackSecret:
            secretName: blah4
          clusterSecret:
            secretName: blah5
        oidcProxy:
          enabled: true
          additionalSecrets:
            - secretRef:
              name: blah1
              optional: true
            - secretRef:
              name: blah2
              optional: true
    asserts:
      - documentIndex: 0
        lengthEqual:
          path: spec.template.spec.containers[0].envFrom
          count: 5
  - it: defaults to 0 envFrom object
    set:
      global:
        oidcProxy:
          enabled: true
    asserts:
      - documentIndex: 0
        equal:
          path: spec.template.spec.containers[0].envFrom
          value: []
  - it: sets extraArgs properly
    set:
      global:
        oidcProxy:
          enabled: true
          skipAuth:
            - method: GET
              path: "/v1/api/docs2"
            - method: POST
              path: "/v1/api/docs3"
            - path: "/v1/api/llm/.*"
              method: ".*"
          extraArgs:
            - "--skip-auth-route=/v1/api/docs"
            - "--skip-auth-route=/v1/api/security/access_token"
    asserts:
      - documentIndex: 0
        contains:
          path: spec.template.spec.containers[0].args
          content: "--skip-auth-route=/v1/api/llm/.*"
      - documentIndex: 0
        contains:
          path: spec.template.spec.containers[0].args
          content: "--skip-auth-route=GET=/v1/api/docs2"
      - documentIndex: 0
        contains:
          path: spec.template.spec.containers[0].args
          content: "--skip-auth-route=POST=/v1/api/docs3"
      - documentIndex: 0
        lengthEqual:
          path: spec.template.spec.containers[0].args
          count: 17
      - documentIndex: 0
        contains:
          path: spec.template.spec.containers[0].args
          content: "--skip-jwt-bearer-tokens"
      - documentIndex: 0
        contains:
          path: spec.template.spec.containers[0].args
          content: "--skip-auth-route=/v1/api/docs"
      - documentIndex: 0
        contains:
          path: spec.template.spec.containers[0].args
          content: "--skip-auth-route=/v1/api/security/access_token"
  - it: overwrites the name
    set:
      global:
        oidcProxy:
          enabled: true
        fullnameOverride: "overwrittenfull"
      services:
        service1:
          args: ["arg1", "arg2"]
          command: ["command1", "command2"]
          autoscaling:
            enabled: true
            minReplicas: 2
            maxReplicas: 10
            maxUnavailable: 1
          replicaCount: 2
          sidecars:
            - name: sidecar1
              image: "sidecar1:latest"
            - name: sidecar2
              image: "sidecar2:latest"
          initContainers:
            - name: initContainer1
              image: "alpine:latest"
              command: ["echo", "Hello World"]
    asserts:
      - equal:
          path: metadata.name
          value: "overwrittenfull-oidc-proxy"
  - it: oidc proxy ingress matches the ingress host domain
    set:
      global:
        ingress:
          host: "stack.play.dev.czi.team"
        oidcProxy:
          enabled: true
      services:
        service1:
          ingress:
            oidcProtected: true
    asserts:
      - documentIndex: 2
        equal:
          path: spec.rules[0].host
          value: stack.play.dev.czi.team
  - it: oidc proxy has volumes mounted
    set:
      global:
        service:
          port: 2222
        ingress:
          host: "stack.play.dev.czi.team"
        oidcProxy:
          enabled: true
          volumeMounts:
            - name: oauth2-proxy-sign-in-template
              mountPath: /templates/oauth2-proxy/sign_in.html
              subPath: sign_in.html
        volumes:
          - name: oauth2-proxy-sign-in-template
            configMap:
              name: oauth2-proxy-sign-in-template
      services:
        service1:
          service:
            port: 4123
          ingress:
            oidcProtected: true
            paths:
              - path: /test1
                pathType: Prefix
        service2:
          ingress:
            oidcProtected: true
            paths:
              - path: /test2
                pathType: Prefix
    asserts:
      - documentIndex: 0
        equal:
          path: spec.template.spec.containers[0].volumeMounts[0].mountPath
          value: /templates/oauth2-proxy/sign_in.html
      - documentIndex: 0
        contains:
          path: spec.template.spec.containers[0].args
          content: --upstream=http://release-name-stack-service1.NAMESPACE.svc.cluster.local:4123/test1
      - documentIndex: 0
        contains:
          path: spec.template.spec.containers[0].args
          content: --upstream=http://release-name-stack-service2.NAMESPACE.svc.cluster.local:2222/test2
      - documentIndex: 0
        equal:
          path: spec.template.spec.containers[0].volumeMounts[0].name
          value: oauth2-proxy-sign-in-template
      - documentIndex: 0
        equal:
          path: spec.template.spec.containers[0].volumeMounts[0].subPath
          value: sign_in.html
      - documentIndex: 0
        equal:
          path: spec.template.spec.volumes[0].name
          value: oauth2-proxy-sign-in-template
      - documentIndex: 0
        equal:
          path: spec.template.spec.volumes[0].configMap.name
          value: oauth2-proxy-sign-in-template
  - it: oidc CRDs get annotations
    set:
      global:
        ingress:
          host: "stack.play.dev.czi.team"
        annotations:
          test1: test1
        podAnnotations:
          test2: test2
        oidcProxy:
          enabled: true
          annotations:
            test3: test3
          volumeMounts:
            - name: oauth2-proxy-sign-in-template
              mountPath: /templates/oauth2-proxy/sign_in.html
              subPath: sign_in.html
        volumes:
          - name: oauth2-proxy-sign-in-template
            configMap:
              name: oauth2-proxy-sign-in-template
      services:
        service1:
          ingress:
            oidcProtected: true
    asserts:
      - documentIndex: 0
        containsDocument:
          kind: Deployment
          apiVersion: apps/v1
          name: release-name-stack-oidc-proxy
      - documentIndex: 0
        equal:
          path: spec.template.metadata.annotations.test1
          value: test1
      - documentIndex: 0
        equal:
          path: spec.template.metadata.annotations.test2
          value: test2
      - documentIndex: 0
        equal:
          path: spec.template.metadata.annotations.test3
          value: test3
      - documentIndex: 1
        containsDocument:
          kind: Service
          apiVersion: v1
          name: release-name-stack-oidc-proxy
      - documentIndex: 1
        equal:
          path: .metadata.annotations.test1
          value: test1
      - documentIndex: 1
        notExists:
          path: .metadata.annotations.test2
      - documentIndex: 1
        equal:
          path: .metadata.annotations.test3
          value: test3
      - documentIndex: 2
        containsDocument:
          kind: Ingress
          apiVersion: networking.k8s.io/v1
          name: release-name-stack-oidc-proxy
      - documentIndex: 2
        equal:
          path: .metadata.annotations.test1
          value: test1
      - documentIndex: 2
        notExists:
          path: .metadata.annotations.test2
      - documentIndex: 2
        equal:
          path: .metadata.annotations.test3
          value: test3
  - it: should have multiple ingress rules for the stack hosts
    set:
      global:
        ingress:
          host: "stack.play.dev.czi.team"
          rules:
            - host: "stack2.com"
        oidcProxy:
          enabled: true
      services:
        service1:
          ingress:
            oidcProtected: true
            paths:
              - path: "/service1"
                pathType: Prefix
            rules:
              - host: "service1.stack2.com"
        service2:
          ingress:
            oidcProtected: true
            paths:
              - path: "/service2"
                pathType: Prefix
            rules:
              - host: "service2.stack2.com"
        service3:
          ingress:
            paths:
              - path: "/service3"
                pathType: Prefix
            oidcProtected: true
        service4:
          ingress:
            oidcProtected: false
            rules:
              - host: "service4.stack2.com"
    asserts:
      - documentIndex: 2
        containsDocument:
          kind: Ingress
          apiVersion: networking.k8s.io/v1
          name: release-name-stack-oidc-proxy
      - documentIndex: 2
        equal:
          path: .spec.rules[0].host
          value: stack.play.dev.czi.team
      - documentIndex: 2
        equal:
          path: .spec.rules[1].host
          value: service1.stack2.com
      - documentIndex: 2
        equal:
          path: .spec.rules[2].host
          value: service2.stack2.com
      - documentIndex: 2
        equal:
          path: .spec.rules[3].host
          value: stack2.com
      - documentIndex: 2
        notExists:
          path: .spec.rules[4]
      - documentIndex: 0
        lengthEqual:
          path: spec.template.spec.containers[0].args
          count: 21
      - documentIndex: 0
        contains:
          path: spec.template.spec.containers[0].args
          content: --whitelist-domain=service1.stack2.com
      - documentIndex: 0
        contains:
          path: spec.template.spec.containers[0].args
          content: --cookie-domain=service1.stack2.com
      - documentIndex: 0
        contains:
          path: spec.template.spec.containers[0].args
          content: --whitelist-domain=service2.stack2.com
      - documentIndex: 0
        contains:
          path: spec.template.spec.containers[0].args
          content: --cookie-domain=service2.stack2.com
      - documentIndex: 0
        contains:
          path: spec.template.spec.containers[0].args
          content: --whitelist-domain=stack2.com
      - documentIndex: 0
        contains:
          path: spec.template.spec.containers[0].args
          content: --cookie-domain=stack2.com
