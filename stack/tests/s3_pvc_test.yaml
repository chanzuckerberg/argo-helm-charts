# yaml-language-server: $schema=https://raw.githubusercontent.com/helm-unittest/helm-unittest/main/schema/helm-testsuite.json
suite: test s3 persistent volume claim
templates:
  - s3-pvc.yaml
tests:
  - it: creates S3 PVC when S3 storage is enabled
    set:
      global:
        s3Storage:
          enabled: true
          bucketName: "test-s3-bucket"
          capacity: "10Gi"
          pvName: "test-s3-pv"
          pvcName: "test-s3-pvc"
          accessModes:
            - ReadWriteMany
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: PersistentVolumeClaim
      - equal:
          path: metadata.name
          value: "test-s3-pvc"
      - equal:
          path: spec.resources.requests.storage
          value: "10Gi"
      - equal:
          path: spec.volumeName
          value: "test-s3-pv"
      - equal:
          path: spec.storageClassName
          value: ""
      - contains:
          path: spec.accessModes
          content: "ReadWriteMany"

  - it: does not create S3 PVC when S3 storage is disabled
    set:
      global:
        s3Storage:
          enabled: false
    asserts:
      - hasDocuments:
          count: 0

  - it: creates S3 PVC with auto-generated names
    set:
      global:
        s3Storage:
          enabled: true
          bucketName: "auto-test-bucket"
          # Don't set custom names - should auto-generate
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: PersistentVolumeClaim
      - matchRegex:
          path: metadata.name
          pattern: "^RELEASE-NAME-stack-s3-pvc$"
      - matchRegex:
          path: spec.volumeName
          pattern: "^RELEASE-NAME-stack-s3-pv$"

  - it: creates S3 PVC with default values
    set:
      global:
        s3Storage:
          enabled: true
          bucketName: "default-test-bucket"
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: PersistentVolumeClaim
      - equal:
          path: spec.resources.requests.storage
          value: "5Gi"
      - contains:
          path: spec.accessModes
          content: "ReadWriteMany"

  - it: supports multiple access modes
    set:
      global:
        s3Storage:
          enabled: true
          bucketName: "access-modes-test"
          accessModes:
            - ReadOnlyMany
            - ReadWriteMany
    asserts:
      - hasDocuments:
          count: 1
      - contains:
          path: spec.accessModes
          content: "ReadOnlyMany"
      - contains:
          path: spec.accessModes
          content: "ReadWriteMany"

  - it: supports custom namespace
    set:
      global:
        s3Storage:
          enabled: true
          bucketName: "namespace-test"
          namespace: "custom-namespace"
    asserts:
      - hasDocuments:
          count: 1
      - equal:
          path: metadata.namespace
          value: "custom-namespace"
